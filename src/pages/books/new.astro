---
import Layout from '../../layouts/Layout.astro';
import { addBook } from '../../lib/db';

// Handle form submission
let errorMessage = '';
// Default form values
let formData = {
  title: '',
  author: '',
  format: '',
  pageCount: '',
  isbn: '',
  authorSex: 'Unknown',
  recommended: false,
  genre: '',
  publishedYear: '',
  publisher: '',
  dateAcquired: new Date().toISOString().split('T')[0],
  cost: '',
  startingPage: '0',
  finished: false,
};

if (Astro.request.method === 'POST') {
  try {
    const data = await Astro.request.formData();

    // Update form values with submitted data
    formData = {
      title: (data.get('title') as string) || '',
      author: (data.get('author') as string) || '',
      format: (data.get('format') as string) || '',
      pageCount: (data.get('pageCount') as string) || '',
      isbn: (data.get('isbn') as string) || '',
      authorSex:
        (data.get('authorSex') as 'M' | 'F' | 'Other' | 'Unknown') || 'Unknown',
      recommended: data.get('recommended') === 'true',
      genre: (data.get('genre') as string) || '',
      publishedYear: (data.get('publishedYear') as string) || '',
      publisher: (data.get('publisher') as string) || '',
      dateAcquired:
        (data.get('dateAcquired') as string) ||
        new Date().toISOString().split('T')[0],
      cost: (data.get('cost') as string) || '',
      startingPage: (data.get('startingPage') as string) || '0',
      finished: data.get('finished') === 'true',
    };

    const book = {
      title: formData.title,
      author: formData.author,
      format: formData.format,
      pageCount: parseInt(formData.pageCount) || 0,
      isbn: formData.isbn,
      authorSex: formData.authorSex as 'M' | 'F' | 'Other' | 'Unknown',
      recommended: formData.recommended,
      genre: formData.genre,
      publishedYear: parseInt(formData.publishedYear) || 0,
      publisher: formData.publisher,
      dateAcquired: formData.dateAcquired,
      dateRemoved: null,
      cost: parseFloat(formData.cost) || 0,
      startingPage: parseInt(formData.startingPage) || 0,
      finished: formData.finished,
    };

    // Validate required fields
    const errors = [];
    if (!book.title) errors.push('Title is required');
    if (!book.author) errors.push('Author is required');
    if (!book.format) errors.push('Format is required');
    if (book.pageCount <= 0) errors.push('Page count must be greater than 0');
    if (!book.genre) errors.push('Genre is required');

    if (errors.length > 0) {
      errorMessage = `Failed to add book: ${errors.join(', ')}`;
      return;
    }

    if (!Astro.locals.session?.User?.id) {
      throw new Error('User not authenticated');
    }
    await addBook(
      { ...book, userId: Astro.locals.session.User.id },
      Astro.locals.runtime.env
    );
    return Astro.redirect('/books');
  } catch (error) {
    console.error('Error adding book:', error);
    errorMessage = 'Failed to add book. Please try again.';
  }
}
---

<Layout title="Add New Book | PageTurn">
  <div>
    <h1>Add New Book</h1>

    {
      errorMessage && (
        <div
          class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4"
          role="alert"
        >
          <p>{errorMessage}</p>
        </div>
      )
    }

    <form method="POST" id="addBookForm" class="max-w-3xl mt-6 space-y-6">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <label for="title" class="form-label">Title</label>
          <input
            type="text"
            id="title"
            name="title"
            required
            class="form-input"
            value={formData.title}
          />
        </div>

        <div>
          <label for="author" class="form-label">Author</label>
          <input
            type="text"
            id="author"
            name="author"
            required
            class="form-input"
            value={formData.author}
          />
        </div>

        <div>
          <label for="format" class="form-label">Format</label>
          <select id="format" name="format" required class="form-input">
            <option value="" selected={formData.format === ''}
              >Select a format</option
            >
            <option value="Physical" selected={formData.format === 'Physical'}
              >Physical</option
            >
            <option value="E-book" selected={formData.format === 'E-book'}
              >E-book</option
            >
            <option value="Audiobook" selected={formData.format === 'Audiobook'}
              >Audiobook</option
            >
          </select>
        </div>

        <div>
          <label for="pageCount" class="form-label">Page Count</label>
          <input
            type="number"
            id="pageCount"
            name="pageCount"
            required
            min="1"
            class="form-input"
            value={formData.pageCount}
          />
        </div>

        <div>
          <label for="isbn" class="form-label">ISBN/ASIN</label>
          <input
            type="text"
            id="isbn"
            name="isbn"
            class="form-input"
            value={formData.isbn}
          />
        </div>

        <div>
          <label for="authorSex" class="form-label">Author Sex</label>
          <select id="authorSex" name="authorSex" class="form-input">
            <option value="Unknown" selected={formData.authorSex === 'Unknown'}
              >Unknown</option
            >
            <option value="M" selected={formData.authorSex === 'M'}>Male</option
            >
            <option value="F" selected={formData.authorSex === 'F'}
              >Female</option
            >
            <option value="Other" selected={formData.authorSex === 'Other'}
              >Other</option
            >
          </select>
        </div>

        <div>
          <label class="form-label mb-2">Recommended to me</label>
          <div class="flex items-center space-x-4">
            <label class="inline-flex items-center">
              <input
                type="radio"
                name="recommended"
                value="true"
                class="form-radio"
                checked={formData.recommended}
              />
              <span class="ml-2">Yes</span>
            </label>
            <label class="inline-flex items-center">
              <input
                type="radio"
                name="recommended"
                value="false"
                class="form-radio"
                checked={!formData.recommended}
              />
              <span class="ml-2">No</span>
            </label>
          </div>
        </div>

        <div>
          <label for="genre" class="form-label">Genre</label>
          <input
            type="text"
            id="genre"
            name="genre"
            required
            class="form-input"
            value={formData.genre}
          />
        </div>

        <div>
          <label for="publishedYear" class="form-label">Published Year</label>
          <input
            type="number"
            id="publishedYear"
            name="publishedYear"
            class="form-input"
            min="1500"
            max={new Date().getFullYear()}
            value={formData.publishedYear}
          />
        </div>

        <div>
          <label for="publisher" class="form-label">Publisher</label>
          <input
            type="text"
            id="publisher"
            name="publisher"
            class="form-input"
            value={formData.publisher}
          />
        </div>

        <div>
          <label for="dateAcquired" class="form-label">Date Acquired</label>
          <input
            type="date"
            id="dateAcquired"
            name="dateAcquired"
            class="form-input"
            value={formData.dateAcquired}
          />
        </div>

        <div>
          <label for="cost" class="form-label">Cost</label>
          <input
            type="number"
            id="cost"
            name="cost"
            step="0.01"
            min="0"
            class="form-input"
            value={formData.cost}
          />
        </div>

        <div>
          <label for="startingPage" class="form-label">Starting Page</label>
          <input
            type="number"
            id="startingPage"
            name="startingPage"
            min="0"
            class="form-input"
            value={formData.startingPage}
          />
        </div>

        <div>
          <label class="form-label mb-2">Finished</label>
          <div class="flex items-center space-x-4">
            <label class="inline-flex items-center">
              <input
                type="radio"
                name="finished"
                value="true"
                class="form-radio"
                checked={formData.finished}
              />
              <span class="ml-2">Yes</span>
            </label>
            <label class="inline-flex items-center">
              <input
                type="radio"
                name="finished"
                value="false"
                class="form-radio"
                checked={!formData.finished}
              />
              <span class="ml-2">No</span>
            </label>
          </div>
        </div>
      </div>

      <div class="flex justify-end space-x-4 pt-4">
        <a href="/books" class="btn-secondary">Cancel</a>
        <button type="submit" class="btn">Add Book</button>
      </div>
    </form>
  </div>
</Layout>
